base_local_planner: dwa_local_planner/DWAPlannerROS
shutdown_costmaps: false
controller_frequency: 10.0
planner_patience: 5.0
controller_patience: 15.0
conservative_reset_dist: 3.0
planner_frequency: 5.0
oscillation_timeout: 10.0
oscillation_distance: 0.2

local_costmap:
  obstacle_range: 3.0
  raytrace_range: 3.5

  footprint: [[-0.205, -0.155], [-0.205, 0.155], [0.077, 0.155], [0.077, -0.155]]
  #robot_radius: 0.17

  inflation_radius: 1.0
  cost_scaling_factor: 3.0

  map_type: costmap
  observation_sources: scan_gt
  scan_gt: {sensor_frame: base_scan_gt, data_type: LaserScan, topic: scan_gt, marking: true, clearing: true}

  global_frame: map
  robot_base_frame: base_link

  update_frequency: 10.0
  publish_frequency: 10.0
  transform_tolerance: 0.5

  static_map: false
  rolling_window: true
  width: 3
  height: 3
  resolution: 0.05

  plugins:  # Sequence of plugin specifications, one per layer. Each specification is a dictionary with name and type fields.
    - {name: static_layer, type: "costmap_2d::StaticLayer"}
    - {name: inflation_layer, type: "costmap_2d::InflationLayer"}

  static_layer:  # http://wiki.ros.org/costmap_2d/hydro/staticmap#Parameters
    enabled: true
    map_topic: /map
    subscribe_to_updates: true  # default: false  TODO # In addition to map_topic, also subscribe to map_topic + "_updates"
    track_unknown_space: false  # default: true  # If true, unknown values in the map messages are translated directly to the layer. Otherwise, unknown values in the map message are translated as FREE_SPACE in the layer.
    unknown_cost_value: -1  # default: -1  # The value for which a cost should be considered unknown when reading in a map from the map server. If the costmap is not tracking unknown space, costs of this value will be considered occupied. A value of zero also results in this parameter being unused.

  inflation_layer:  # http://wiki.ros.org/costmap_2d/hydro/inflation#Parameters
    enabled: true
    cost_scaling_factor: 7.5 # default: 10  # A scaling factor to apply to cost values during inflation. The cost function is computed as follows for all cells in the costmap further than the inscribed radius distance and closer than the inflation radius distance away from an actual obstacle: exp(-1.0 * cost_scaling_factor * (distance_from_obstacle - inscribed_radius)) * (costmap_2d::INSCRIBED_INFLATED_OBSTACLE - 1), where costmap_2d::INSCRIBED_INFLATED_OBSTACLE is currently 254. NOTE: since the cost_scaling_factor is multiplied by a negative in the formula, increasing the factor will decrease the resulting cost values.
    inflation_radius: 0.3 # default: 0.55  # The radius in meters to which the map inflates obstacle cost values.


DWAPlannerROS:

# Robot Configuration Parameters
  max_vel_x: 0.26
  min_vel_x: 0.0

  max_vel_y: 0.0
  min_vel_y: 0.0

# The velocity when robot is moving in a straight line
  max_vel_trans:  0.26
  min_vel_trans:  0.0

  max_vel_theta: 2.5
  min_vel_theta: 0.0

  acc_lim_x: 2.5
  acc_lim_y: 0.0
  acc_lim_theta: 3.2

# Goal Tolerance Parameters
  xy_goal_tolerance: 0.2
  yaw_goal_tolerance: 0.3
  latch_xy_goal_tolerance: true

# Forward Simulation Parameters
  sim_time: 2.0
  vx_samples: 20
  vy_samples: 0
  vth_samples: 40
  controller_frequency: 10.0

# Trajectory Scoring Parameters
  path_distance_bias: 32.0
  goal_distance_bias: 20.0
  occdist_scale: 0.02
  forward_point_distance: 0.325
  stop_time_buffer: 0.2
  scaling_speed: 0.25
  max_scaling_factor: 0.2

# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05

# Debugging
  publish_traj_pc : true
  publish_cost_grid_pc: true

global_costmap:
  obstacle_range: 3.0
  raytrace_range: 3.5

  footprint: [[-0.205, -0.155], [-0.205, 0.155], [0.077, 0.155], [0.077, -0.155]]
  #robot_radius: 0.17

  inflation_radius: 1.0
  cost_scaling_factor: 3.0

  map_type: costmap
#  observation_sources: scan_gt
#  scan_gt: {sensor_frame: base_scan_gt, data_type: LaserScan, topic: scan_gt, marking: true, clearing: true}

  global_frame: map
  robot_base_frame: base_link

  update_frequency: 10.0
  publish_frequency: 10.0
  transform_tolerance: 0.5

#  static_map: true
  static_map: false
  rolling_window: true
  width: 200
  height: 200
  resolution: 0.05

  plugins:  # Sequence of plugin specifications, one per layer. Each specification is a dictionary with name and type fields.
    - {name: static_layer, type: "costmap_2d::StaticLayer"}
    - {name: inflation_layer, type: "costmap_2d::InflationLayer"}

  static_layer:  # http://wiki.ros.org/costmap_2d/hydro/staticmap#Parameters
    enabled: true
    map_topic: /map
    subscribe_to_updates: true  # default: false  TODO # In addition to map_topic, also subscribe to map_topic + "_updates"
    track_unknown_space: false  # default: true  # If true, unknown values in the map messages are translated directly to the layer. Otherwise, unknown values in the map message are translated as FREE_SPACE in the layer.
    unknown_cost_value: -1  # default: -1  # The value for which a cost should be considered unknown when reading in a map from the map server. If the costmap is not tracking unknown space, costs of this value will be considered occupied. A value of zero also results in this parameter being unused.

  inflation_layer:  # http://wiki.ros.org/costmap_2d/hydro/inflation#Parameters
    enabled: true
    cost_scaling_factor: 7.5 # default: 10  # A scaling factor to apply to cost values during inflation. The cost function is computed as follows for all cells in the costmap further than the inscribed radius distance and closer than the inflation radius distance away from an actual obstacle: exp(-1.0 * cost_scaling_factor * (distance_from_obstacle - inscribed_radius)) * (costmap_2d::INSCRIBED_INFLATED_OBSTACLE - 1), where costmap_2d::INSCRIBED_INFLATED_OBSTACLE is currently 254. NOTE: since the cost_scaling_factor is multiplied by a negative in the formula, increasing the factor will decrease the resulting cost values.
    inflation_radius: 0.3 # default: 0.55  # The radius in meters to which the map inflates obstacle cost values.
